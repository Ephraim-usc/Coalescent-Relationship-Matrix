#!/usr/bin/env python

### importing packages
import argparse

### importing egrm
from egrm import eGRM, read_trees, write_grm

### parse arguments
parser=argparse.ArgumentParser()
parser.add_argument('--input', type = str, help='input file prefix')
parser.add_argument('--output', type = str, help='output file prefix')
parser.add_argument('--mode', type = str, help='mode of output')
parser.add_argument('--left', type = int, help='leftmost genomic position to be included')
parser.add_argument('--right', type = int, help='rightmost genomic position to be included')

args = vars(parser.parse_args())
args = dict((k,v) for k,v in args.items() if v is not None)

input = args["input"]
left = args.get("left", None)
right = args.get("right", None)

if args.get("output", None) == None:
  output = input + ".e"
else:
  output = args["output"]

if args.get("mode", None) == None:
  mode = "GCTA"
else:
  mode = "pickle"

### 
trees = read_trees(input + ".trees")

if left != None and right != None:
  left = max(0, left)
  right = min(trees.sequence_length, right)
  trees = trees.keep_intervals([[left, right]], simplify=False)

egrm, egrm_tl = eGRM(trees)

write_grm(egrm, egrm_tl, output, mode)
